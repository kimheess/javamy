package ojdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

public class Grade {
	Connection conn;
	Statement stmt;
	PreparedStatement pstmt;
	String sql;
	
	public Grade() {
		String jdbc_driver = "oracle.jdbc.driver.OracleDriver";
		String jdbc_url = "jdbc:oracle:thin:@localhost:1521:XE";
		String user = "scott";
		String pwd = "tiger";
		
		try {
			Class.forName(jdbc_driver);
			this.conn = DriverManager.getConnection(jdbc_url, user, pwd);  // --> 데이터베이스 연결 
		}
		catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public int dynamicInsert(int Undergrad,String ename, String gender,int lang,int english,int maths, int science) {
		int rowCount = 0;
		this.sql = "insert into grade values(?, ?, ?, ?, ?, ?, ?)";
		
		try {
			this.pstmt = conn.prepareStatement(this.sql);
			pstmt.setInt(1, Undergrad);
			pstmt.setString(2, ename);
			pstmt.setString(3, gender);
			pstmt.setInt(4, lang);
			pstmt.setInt(5, english);
			pstmt.setInt(6, maths);
			pstmt.setInt(7, science);
			
			
			rowCount = pstmt.executeUpdate();
		}
		catch (SQLException e) {
			e.printStackTrace();
		}
		finally {
			try {
				if(!this.pstmt.isClosed()) {
					this.pstmt.close();
				}
			}
			catch (SQLException e) {
				e.printStackTrace();
			}
		}
		
		return rowCount;
	}
	
	public void closeConnection() {
		try {
			if(!this.conn.isClosed()) {
				this.conn.close();
			}
		}
		catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args) {
		Grade it = new Grade();
		int rowCount = 0;
		//학생 정보 입력
		rowCount = it.dynamicInsert(1207, "김희수","남",90,80,80,70);
		System.out.println(rowCount + "개의 행이 입력되었습니다.");
		
		
		
		it.closeConnection();
	}

}
