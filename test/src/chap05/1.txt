	
	Compile Error => 구문 오류
	
	Runtime Error / Exception  

	Checked Exception : 반드시 try...catch 블럭을 이용한 예외처리 필요
	==> Exception 계열의 예외 클래스들!
		1) 직접 예외 처리
		2) 자신을 호출한 문장으로 예외 던지기	

	Unchecked Exception : try... catch 블럭을 이용한 예외처리 선택 ,, 
 	==> RuntimeException 계열의 예외 클래스들이다 

	인터페이스 타입의 레퍼런스는 인터페이스를 구현한 클래스의 인스턴스를 가리킬 수 있다. ===> o
	인터페이스를 구현한 클래스의 타입은 인터페이스 구현 객체를 가리킬 수 있을까 ?           ===> x	
	=========================================================
	부모클래스 타입의 레퍼런스는 자식 클래스의 인스턴스를 가리킬 수 있다 ===> o 
	자식 클래스 타입의 레퍼런스는 부모 클래스의 객체를 가리킬 수 있을까? ===> x ClassCastException 

-------------------------------------------------------------------------------------------------------------------------------------------------
	CRUD => Create,	 새로운 데이터 생성 후 저장소에 저장할 수 있어야 한다 
		Read,  	 여러 값중 내가 특정한 값을 읽을수 있어야 한다 
		Update,	 저장된 값은 얼마든지 변경 될 수 있다
		Delete 	 저장된 값들 중에서 필요 없어진 값을 제거할 수 있어야 한다 

		ArrayList, LinkList , HashSet.... 

		==> CRUD / 각각의 컬렉션 구현 클래스 마다 사용법이 모두 다르다

		==> Enum~~, lter~, Listlter~ 	==> 각각의 컬렉션 구현 클래스 모두에 대한 일괄적인 전체 대이터 처리를 위한
					       한 가지 방법을 제공 





	자료구조	주어진 목적에 맞게 데이터들을 효율적으로 저장하고 사용하는 방법 


	

	유클리드 호제법
	(140,24)    	=> a : 140 b:24
	140 = 24 * 5 +20 	=> a : 24 b :20 
	24 = 20 *1 + 4 	=> a:20 b:4
	20 = 4 *5 = 0 	=> x GCD(4)최대 공약수
	
	나머지 


	recur (4) => 1 2 3 1 4 1 2
 	recur (3) => 1 2 3 1
	recur (2) => 1 2 
	recur (1) => 1 	

